openapi: 3.1.0
info:
  title: Crucible API Service (Microservices Mode)
  description: API service for distributed Crucible platform
  version: 2.0.0
paths:
  /:
    get:
      summary: Root
      description: Root endpoint with HTML interface
      operationId: root__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /health:
    get:
      summary: Health
      description: Gateway health check
      operationId: health_health_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /api/eval:
    post:
      summary: Evaluate
      description: Submit code for evaluation
      operationId: evaluate_api_eval_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluationRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationSubmitResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/eval-batch:
    post:
      summary: Evaluate Batch
      description: Submit multiple evaluations as a batch - returns immediately with
        202 Accepted
      operationId: evaluate_batch_api_eval_batch_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchEvaluationRequest'
        required: true
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchEvaluationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/eval/{eval_id}/status:
    get:
      summary: Get Evaluation Status
      description: 'Get evaluation status - checks Redis first for real-time status,
        falls back to DB.

        This provides instant status updates for running evaluations.'
      operationId: get_evaluation_status_api_eval__eval_id__status_get
      parameters:
      - name: eval_id
        in: path
        required: true
        schema:
          type: string
          title: Eval Id
      responses:
        '200':
          description: Evaluation found with complete status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationStatusResponse'
        '202':
          description: Evaluation is pending/in-progress
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationStatusResponse'
        '404':
          description: Evaluation not found
        '503':
          description: Storage service unavailable
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      summary: Update Evaluation Status
      description: Admin endpoint to manually update evaluation status
      operationId: update_evaluation_status_api_eval__eval_id__status_patch
      parameters:
      - name: eval_id
        in: path
        required: true
        schema:
          type: string
          title: Eval Id
      - name: status
        in: query
        required: true
        schema:
          type: string
          title: Status
      - name: reason
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Reason
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/eval/{eval_id}:
    get:
      summary: Get Evaluation
      description: 'Get full evaluation details including code, output, and all metadata.

        This endpoint returns comprehensive evaluation data from the storage service.'
      operationId: get_evaluation_api_eval__eval_id__get
      parameters:
      - name: eval_id
        in: path
        required: true
        schema:
          type: string
          title: Eval Id
      responses:
        '200':
          description: Full evaluation details including code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationResponse'
        '404':
          description: Evaluation not found
        '503':
          description: Storage service unavailable
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/eval/{eval_id}/logs:
    get:
      summary: Get Evaluation Logs
      description: Get logs for any evaluation - routes through storage service
      operationId: get_evaluation_logs_api_eval__eval_id__logs_get
      parameters:
      - name: eval_id
        in: path
        required: true
        schema:
          type: string
          title: Eval Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/eval/{eval_id}/kill:
    post:
      summary: Kill Evaluation
      description: Kill a running evaluation
      operationId: kill_evaluation_api_eval__eval_id__kill_post
      parameters:
      - name: eval_id
        in: path
        required: true
        schema:
          type: string
          title: Eval Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/eval/{eval_id}/cancel:
    post:
      summary: Cancel Evaluation
      description: 'Cancel a queued or running evaluation task.


        This cancels the Celery task, preventing it from running if queued,

        or optionally terminating it if already running.


        Different from /kill which stops the Docker container execution.'
      operationId: cancel_evaluation_api_eval__eval_id__cancel_post
      parameters:
      - name: eval_id
        in: path
        required: true
        schema:
          type: string
          title: Eval Id
      - name: terminate
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Terminate
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/evaluations:
    get:
      summary: Get Evaluations
      description: Get evaluation history from storage service
      operationId: get_evaluations_api_evaluations_get
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: status
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Status
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/queue-status:
    get:
      summary: Get Queue Status
      description: Get queue status - now returns Celery status since legacy queue
        is deactivated
      operationId: get_queue_status_api_queue_status_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueStatusResponse'
  /api/celery-status:
    get:
      summary: Get Celery Status Endpoint
      description: Get Celery cluster status including workers, queues, and tasks.
      operationId: get_celery_status_endpoint_api_celery_status_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /api/status:
    get:
      summary: Platform Status
      description: Overall platform status
      operationId: platform_status_api_status_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
  /api/health:
    get:
      summary: Health Check
      description: Health check endpoint
      operationId: health_check_api_health_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
  /api/statistics:
    get:
      summary: Get Statistics
      description: Get aggregated statistics from storage service
      operationId: get_statistics_api_statistics_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /api/openapi.yaml:
    get:
      summary: Get Openapi Spec
      description: Serve OpenAPI specification
      operationId: get_openapi_spec_api_openapi_yaml_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
components:
  schemas:
    BatchEvaluationRequest:
      properties:
        evaluations:
          items:
            $ref: '#/components/schemas/EvaluationRequest'
          type: array
          title: Evaluations
      type: object
      required:
      - evaluations
      title: BatchEvaluationRequest
    BatchEvaluationResponse:
      properties:
        evaluations:
          items:
            $ref: '#/components/schemas/EvaluationSubmitResponse'
          type: array
          title: Evaluations
        total:
          type: integer
          title: Total
        queued:
          type: integer
          title: Queued
        failed:
          type: integer
          title: Failed
      type: object
      required:
      - evaluations
      - total
      - queued
      - failed
      title: BatchEvaluationResponse
    EvaluationRequest:
      properties:
        code:
          type: string
          title: Code
        language:
          type: string
          title: Language
          default: python
        engine:
          type: string
          title: Engine
          default: docker
        timeout:
          type: integer
          title: Timeout
          default: 30
        priority:
          type: boolean
          title: Priority
          default: false
      type: object
      required:
      - code
      title: EvaluationRequest
    EvaluationResponse:
      properties:
        eval_id:
          type: string
          title: Eval Id
        code:
          anyOf:
          - type: string
          - type: 'null'
          title: Code
          description: The code that was evaluated
        language:
          anyOf:
          - type: string
          - type: 'null'
          title: Language
          description: Programming language used
          default: python
        status:
          $ref: '#/components/schemas/EvaluationStatus'
        created_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Created At
          description: When the evaluation was created
        started_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Started At
          description: When execution started
        completed_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Completed At
          description: When execution completed
        output:
          anyOf:
          - type: string
          - type: 'null'
          title: Output
          description: Standard output from the evaluation
        error:
          anyOf:
          - type: string
          - type: 'null'
          title: Error
          description: Standard error or error messages
        exit_code:
          anyOf:
          - type: integer
          - type: 'null'
          title: Exit Code
          description: Process exit code
        runtime_ms:
          anyOf:
          - type: integer
          - type: 'null'
          title: Runtime Ms
          description: Execution time in milliseconds
        memory_used_mb:
          anyOf:
          - type: integer
          - type: 'null'
          title: Memory Used Mb
          description: Peak memory usage in megabytes
        output_truncated:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Output Truncated
          description: Whether output was truncated due to size
          default: false
        error_truncated:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Error Truncated
          description: Whether error was truncated due to size
          default: false
        metadata:
          anyOf:
          - type: object
          - type: 'null'
          title: Metadata
      type: object
      required:
      - eval_id
      - status
      title: EvaluationResponse
      description: Complete evaluation data including code, status, and results
    EvaluationStatus:
      type: string
      enum:
      - submitted
      - queued
      - provisioning
      - running
      - completed
      - failed
      - cancelled
      title: EvaluationStatus
      description: The status of an evaluation throughout its lifecycle
    EvaluationStatusResponse:
      properties:
        eval_id:
          type: string
          title: Eval Id
        status:
          $ref: '#/components/schemas/EvaluationStatus'
        created_at:
          anyOf:
          - type: string
          - type: 'null'
          title: Created At
        completed_at:
          anyOf:
          - type: string
          - type: 'null'
          title: Completed At
        output:
          type: string
          title: Output
          default: ''
        error:
          type: string
          title: Error
          default: ''
        success:
          type: boolean
          title: Success
          default: false
      type: object
      required:
      - eval_id
      - status
      title: EvaluationStatusResponse
    EvaluationSubmitResponse:
      properties:
        eval_id:
          type: string
          title: Eval Id
        status:
          allOf:
          - $ref: '#/components/schemas/EvaluationStatus'
          default: queued
        message:
          type: string
          title: Message
          default: Evaluation queued for processing
        queue_position:
          anyOf:
          - type: integer
          - type: 'null'
          title: Queue Position
      type: object
      required:
      - eval_id
      title: EvaluationSubmitResponse
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    HealthResponse:
      properties:
        status:
          type: string
          title: Status
          default: ok
        timestamp:
          type: string
          title: Timestamp
        services:
          $ref: '#/components/schemas/ServiceHealthInfo'
      type: object
      required:
      - timestamp
      - services
      title: HealthResponse
    QueueStatusResponse:
      properties:
        queued:
          type: integer
          title: Queued
          default: 0
        processing:
          type: integer
          title: Processing
          default: 0
        queue_length:
          type: integer
          title: Queue Length
          default: 0
        total_tasks:
          type: integer
          title: Total Tasks
          default: 0
        error:
          anyOf:
          - type: string
          - type: 'null'
          title: Error
      type: object
      title: QueueStatusResponse
    ServiceHealthInfo:
      properties:
        gateway:
          type: string
          title: Gateway
          default: healthy
        queue:
          type: string
          title: Queue
          default: healthy
        storage:
          type: string
          title: Storage
          default: healthy
        executor:
          type: string
          title: Executor
          default: healthy
      type: object
      title: ServiceHealthInfo
    StatusResponse:
      properties:
        platform:
          type: string
          title: Platform
          default: healthy
        mode:
          type: string
          title: Mode
          default: microservices
        services:
          $ref: '#/components/schemas/ServiceHealthInfo'
        queue:
          $ref: '#/components/schemas/QueueStatusResponse'
        storage:
          type: object
          title: Storage
          default: {}
        celery:
          anyOf:
          - type: object
          - type: 'null'
          title: Celery
        version:
          type: string
          title: Version
          default: 2.0.0
      type: object
      required:
      - services
      - queue
      title: StatusResponse
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
