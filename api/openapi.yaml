openapi: 3.1.0
info:
  title: Crucible API Gateway
  description: Main API gateway for Crucible evaluation platform (microservices mode)
  version: 2.0.0
paths:
  /:
    get:
      summary: Root
      description: Root endpoint - returns basic API information.
      operationId: root__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /health:
    get:
      summary: Health Check
      description: Basic health check endpoint.
      operationId: health_check_health_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /health/ready:
    get:
      summary: Readiness Check
      description: Readiness check that verifies all services are available.
      operationId: readiness_check_health_ready_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /status:
    get:
      summary: Get Platform Status
      description: Get comprehensive platform status including all services.
      operationId: get_platform_status_status_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
  /queue/status:
    get:
      summary: Get Queue Status
      description: Get current queue status and metrics.
      operationId: get_queue_status_queue_status_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueStatusResponse'
  /eval:
    post:
      summary: Submit Evaluation
      description: 'Submit code for evaluation (single evaluation).


        This endpoint submits to Celery for processing.

        Use WebSocket endpoint for real-time updates.


        DEPRECATED: Use /api/eval endpoint instead.'
      operationId: submit_evaluation_eval_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluationRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
  /eval/{eval_id}:
    get:
      summary: Get Evaluation Status
      description: Get the status of a specific evaluation.
      operationId: get_evaluation_status_eval__eval_id__get
      parameters:
      - name: eval_id
        in: path
        required: true
        schema:
          type: string
          title: Eval Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationStatusResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /eval/{eval_id}/logs:
    get:
      summary: Get Evaluation Logs
      description: Get execution logs for a specific evaluation.
      operationId: get_evaluation_logs_eval__eval_id__logs_get
      parameters:
      - name: eval_id
        in: path
        required: true
        schema:
          type: string
          title: Eval Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Get Evaluation Logs Eval  Eval Id  Logs Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /eval/{eval_id}/cancel:
    post:
      summary: Cancel Evaluation
      description: Cancel a running evaluation.
      operationId: cancel_evaluation_eval__eval_id__cancel_post
      parameters:
      - name: eval_id
        in: path
        required: true
        schema:
          type: string
          title: Eval Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
                title: Response Cancel Evaluation Eval  Eval Id  Cancel Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /batch:
    post:
      summary: Submit Batch Evaluation
      description: Submit multiple evaluations in a single request.
      operationId: submit_batch_evaluation_batch_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchEvaluationRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchEvaluationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /evaluations:
    get:
      summary: List Evaluations
      description: List all evaluations with optional status filter.
      operationId: list_evaluations_evaluations_get
      parameters:
      - name: status
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/EvaluationStatus'
          - type: 'null'
          description: Filter by status
          title: Status
        description: Filter by status
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 1000
          minimum: 1
          description: Maximum number of results
          default: 100
          title: Limit
        description: Maximum number of results
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          description: Number of results to skip
          default: 0
          title: Offset
        description: Number of results to skip
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EvaluationStatusResponse'
                title: Response List Evaluations Evaluations Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /evaluations/running:
    get:
      summary: Get Running Evaluations
      description: Get all currently running evaluations from storage service.
      operationId: get_running_evaluations_evaluations_running_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
                title: Response Get Running Evaluations Evaluations Running Get
  /statistics:
    get:
      summary: Get Statistics
      description: Get evaluation statistics from storage service.
      operationId: get_statistics_statistics_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Get Statistics Statistics Get
  /dlq/messages:
    get:
      summary: Get Dlq Messages
      description: Get messages from the dead letter queue.
      operationId: get_dlq_messages_dlq_messages_get
      parameters:
      - name: queue
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Specific queue to fetch from
          title: Queue
        description: Specific queue to fetch from
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          minimum: 1
          description: Number of messages to return
          default: 10
          title: Limit
        description: Number of messages to return
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                title: Response Get Dlq Messages Dlq Messages Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      summary: Clear Dlq
      description: Clear messages from the DLQ.
      operationId: clear_dlq_dlq_messages_delete
      parameters:
      - name: queue
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Specific queue to clear
          title: Queue
        description: Specific queue to clear
      - name: older_than_hours
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
            minimum: 1
          - type: 'null'
          description: Clear messages older than N hours
          title: Older Than Hours
        description: Clear messages older than N hours
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Clear Dlq Dlq Messages Delete
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /dlq/messages/{message_id}/retry:
    post:
      summary: Retry Dlq Message
      description: Retry a specific message from the DLQ.
      operationId: retry_dlq_message_dlq_messages__message_id__retry_post
      parameters:
      - name: message_id
        in: path
        required: true
        schema:
          type: string
          title: Message Id
      - name: queue
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Queue
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
                title: Response Retry Dlq Message Dlq Messages  Message Id  Retry
                  Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /dlq/messages/{message_id}:
    delete:
      summary: Delete Dlq Message
      description: Delete a specific message from the DLQ.
      operationId: delete_dlq_message_dlq_messages__message_id__delete
      parameters:
      - name: message_id
        in: path
        required: true
        schema:
          type: string
          title: Message Id
      - name: queue
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Queue
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
                title: Response Delete Dlq Message Dlq Messages  Message Id  Delete
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/eval:
    post:
      summary: Api Submit Evaluation
      description: 'Submit code for evaluation through the API gateway.


        This is the main evaluation endpoint that handles both

        Celery submission and status tracking.'
      operationId: api_submit_evaluation_api_eval_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluationRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/eval/{eval_id}:
    get:
      summary: Api Get Evaluation Status
      description: Get evaluation status through the API gateway.
      operationId: api_get_evaluation_status_api_eval__eval_id__get
      parameters:
      - name: eval_id
        in: path
        required: true
        schema:
          type: string
          title: Eval Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationStatusResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    BatchEvaluationRequest:
      properties:
        evaluations:
          items:
            $ref: '#/components/schemas/EvaluationRequest'
          type: array
          title: Evaluations
      type: object
      required:
      - evaluations
      title: BatchEvaluationRequest
    BatchEvaluationResponse:
      properties:
        evaluations:
          items:
            $ref: '#/components/schemas/EvaluationSubmitResponse'
          type: array
          title: Evaluations
        total:
          type: integer
          title: Total
        queued:
          type: integer
          title: Queued
        failed:
          type: integer
          title: Failed
      type: object
      required:
      - evaluations
      - total
      - queued
      - failed
      title: BatchEvaluationResponse
    EvaluationRequest:
      properties:
        code:
          type: string
          title: Code
          description: Code to execute
        language:
          type: string
          title: Language
          description: Programming language
          default: python
        engine:
          type: string
          title: Engine
          description: Execution engine
          default: docker
        timeout:
          type: integer
          maximum: 300.0
          minimum: 1.0
          title: Timeout
          description: Timeout in seconds
          default: 30
        priority:
          type: boolean
          title: Priority
          description: High priority flag
          default: false
        memory_limit:
          type: string
          title: Memory Limit
          description: Memory limit (e.g., 512Mi, 1Gi)
          default: 512Mi
        cpu_limit:
          type: string
          title: Cpu Limit
          description: CPU limit (e.g., 500m, 1)
          default: 500m
        executor_image:
          anyOf:
          - type: string
          - type: 'null'
          title: Executor Image
          description: Executor image name (e.g., 'python-base') or full image path
      type: object
      required:
      - code
      title: EvaluationRequest
    EvaluationResponse:
      properties:
        eval_id:
          type: string
          title: Eval Id
        code:
          anyOf:
          - type: string
          - type: 'null'
          title: Code
          description: The code that was evaluated
        language:
          anyOf:
          - type: string
          - type: 'null'
          title: Language
          description: Programming language used
          default: python
        status:
          $ref: '#/components/schemas/EvaluationStatus'
        created_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Created At
          description: When the evaluation was created
        started_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Started At
          description: When execution started
        completed_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Completed At
          description: When execution completed
        output:
          anyOf:
          - type: string
          - type: 'null'
          title: Output
          description: Standard output from the evaluation
        error:
          anyOf:
          - type: string
          - type: 'null'
          title: Error
          description: Standard error or error messages
        exit_code:
          anyOf:
          - type: integer
          - type: 'null'
          title: Exit Code
          description: Process exit code
        runtime_ms:
          anyOf:
          - type: integer
          - type: 'null'
          title: Runtime Ms
          description: Execution time in milliseconds
        memory_used_mb:
          anyOf:
          - type: integer
          - type: 'null'
          title: Memory Used Mb
          description: Peak memory usage in megabytes
        output_truncated:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Output Truncated
          description: Whether output was truncated due to size
          default: false
        error_truncated:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Error Truncated
          description: Whether error was truncated due to size
          default: false
        metadata:
          anyOf:
          - type: object
          - type: 'null'
          title: Metadata
      type: object
      required:
      - eval_id
      - status
      title: EvaluationResponse
      description: Complete evaluation data including code, status, and results
    EvaluationStatus:
      type: string
      enum:
      - submitted
      - queued
      - provisioning
      - running
      - completed
      - failed
      - cancelled
      title: EvaluationStatus
      description: The status of an evaluation throughout its lifecycle
    EvaluationStatusResponse:
      properties:
        eval_id:
          type: string
          title: Eval Id
        status:
          $ref: '#/components/schemas/EvaluationStatus'
        created_at:
          anyOf:
          - type: string
          - type: 'null'
          title: Created At
        completed_at:
          anyOf:
          - type: string
          - type: 'null'
          title: Completed At
        output:
          type: string
          title: Output
          default: ''
        error:
          type: string
          title: Error
          default: ''
        success:
          type: boolean
          title: Success
          default: false
      type: object
      required:
      - eval_id
      - status
      title: EvaluationStatusResponse
    EvaluationSubmitResponse:
      properties:
        eval_id:
          type: string
          title: Eval Id
        status:
          allOf:
          - $ref: '#/components/schemas/EvaluationStatus'
          default: queued
        message:
          type: string
          title: Message
          default: Evaluation queued for processing
        queue_position:
          anyOf:
          - type: integer
          - type: 'null'
          title: Queue Position
      type: object
      required:
      - eval_id
      title: EvaluationSubmitResponse
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    QueueStatusResponse:
      properties:
        queued:
          type: integer
          title: Queued
          default: 0
        processing:
          type: integer
          title: Processing
          default: 0
        queue_length:
          type: integer
          title: Queue Length
          default: 0
        total_tasks:
          type: integer
          title: Total Tasks
          default: 0
        error:
          anyOf:
          - type: string
          - type: 'null'
          title: Error
      type: object
      title: QueueStatusResponse
    ServiceHealthInfo:
      properties:
        gateway:
          type: string
          title: Gateway
          default: healthy
        queue:
          type: string
          title: Queue
          default: healthy
        storage:
          type: string
          title: Storage
          default: healthy
        executor:
          type: string
          title: Executor
          default: healthy
      type: object
      title: ServiceHealthInfo
    StatusResponse:
      properties:
        platform:
          type: string
          title: Platform
          default: healthy
        mode:
          type: string
          title: Mode
          default: microservices
        services:
          $ref: '#/components/schemas/ServiceHealthInfo'
        queue:
          $ref: '#/components/schemas/QueueStatusResponse'
        storage:
          type: object
          title: Storage
          default: {}
        celery:
          anyOf:
          - type: object
          - type: 'null'
          title: Celery
        version:
          type: string
          title: Version
          default: 2.0.0
      type: object
      required:
      - services
      - queue
      title: StatusResponse
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
