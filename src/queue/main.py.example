"""
EXAMPLE: How queue could work as a standalone microservice

This file shows how to wrap the queue in a REST API for
microservice deployment. Currently, this component is used directly 
by the monolithic platform.

To use this example:
1. Install dependencies: pip install fastapi uvicorn
2. Rename to main.py
3. Run: uvicorn main:app --reload
4. Access API at: http://localhost:8000/docs

Note: The monolithic platform (src/platform/) doesn't use this file.
"""

"""Queue Service - Manages evaluation task queue"""
from fastapi import FastAPI
from typing import List

app = FastAPI(title="Queue Service")

# In-memory queue for MVP
task_queue: List[dict] = []

@app.post("/enqueue")
async def enqueue_task(task: dict):
    """Add task to queue"""
    task_queue.append(task)
    return {"queued": True, "position": len(task_queue)}

@app.get("/dequeue")
async def dequeue_task():
    """Get next task from queue"""
    if task_queue:
        return task_queue.pop(0)
    return None

@app.get("/status")
async def queue_status():
    """Get queue status"""
    return {
        "queue_length": len(task_queue),
        "tasks": task_queue[:10]  # First 10 tasks
    }
