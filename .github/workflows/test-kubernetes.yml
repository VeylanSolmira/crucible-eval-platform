name: Kubernetes Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      test_suite:
        description: 'Test suite to run (unit, integration, e2e, performance, security, all)'
        required: false
        default: 'all'
      include_slow:
        description: 'Include slow tests'
        required: false
        default: 'false'
        type: boolean
      include_destructive:
        description: 'Include destructive tests'
        required: false
        default: 'false'
        type: boolean

env:
  ECR_REGISTRY: ${{ vars.ECR_REGISTRY }}
  AWS_REGION: us-west-2
  K8S_NAMESPACE: crucible-test-${{ github.run_id }}

jobs:
  setup-cluster:
    name: Setup Test Cluster
    runs-on: ubuntu-latest
    outputs:
      cluster_ready: ${{ steps.verify.outputs.ready }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          role-session-name: GitHub-Actions-Test-${{ github.run_id }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'
      
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name crucible-cluster
      
      - name: Create test namespace
        run: |
          kubectl create namespace ${{ env.K8S_NAMESPACE }}
          kubectl label namespace ${{ env.K8S_NAMESPACE }} \
            test-run=${{ github.run_id }} \
            test-type=automated \
            created-by=github-actions
      
      - name: Deploy test environment
        run: |
          # Apply base configuration with test namespace
          kubectl apply -k k8s/overlays/test -n ${{ env.K8S_NAMESPACE }}
          
          # Wait for deployments to be ready
          kubectl wait --for=condition=available --timeout=300s \
            deployment/api deployment/storage-service deployment/dispatcher \
            -n ${{ env.K8S_NAMESPACE }}
      
      - name: Verify test environment
        id: verify
        run: |
          # Check all services are running
          kubectl get all -n ${{ env.K8S_NAMESPACE }}
          echo "ready=true" >> $GITHUB_OUTPUT

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: setup-cluster
    if: inputs.test_suite == 'unit' || inputs.test_suite == 'all' || inputs.test_suite == ''
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r tests/requirements-test.txt
      
      - name: Run unit tests
        run: |
          python tests/run_tests.py unit --verbose
        env:
          TEST_DATABASE_URL: "sqlite:///:memory:"

  integration-tests-external:
    name: Integration Tests (External)
    runs-on: ubuntu-latest
    needs: setup-cluster
    if: inputs.test_suite == 'integration' || inputs.test_suite == 'all' || inputs.test_suite == ''
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          role-session-name: GitHub-Actions-Test-External-${{ github.run_id }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
      
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name crucible-cluster
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r tests/requirements-test.txt
      
      - name: Run tests requiring cluster admin
        run: |
          # These tests need kubectl access to verify Kubernetes resources
          python -m pytest tests/integration/ -m "requires_cluster_admin or requires_kubectl" -v
        env:
          K8S_NAMESPACE: ${{ env.K8S_NAMESPACE }}
          KUBECONFIG: ${{ github.workspace }}/.kube/config

  integration-tests-internal:
    name: Integration Tests (In-Cluster)
    runs-on: ubuntu-latest
    needs: setup-cluster
    if: inputs.test_suite == 'integration' || inputs.test_suite == 'all' || inputs.test_suite == ''
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          role-session-name: GitHub-Actions-Test-Internal-${{ github.run_id }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2
      
      - name: Build test runner image
        run: |
          docker build -f tests/Dockerfile -t ${{ env.ECR_REGISTRY }}/crucible-test-runner:${{ github.sha }} .
          docker push ${{ env.ECR_REGISTRY }}/crucible-test-runner:${{ github.sha }}
      
      - name: Run in-cluster tests
        run: |
          # Create test job
          cat <<EOF | kubectl apply -f -
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: integration-tests-${{ github.run_id }}
            namespace: ${{ env.K8S_NAMESPACE }}
          spec:
            template:
              spec:
                serviceAccountName: test-runner
                containers:
                - name: test-runner
                  image: ${{ env.ECR_REGISTRY }}/crucible-test-runner:${{ github.sha }}
                  env:
                  - name: IN_CLUSTER_TESTS
                    value: "true"
                  - name: K8S_NAMESPACE
                    value: ${{ env.K8S_NAMESPACE }}
                  command: ["python", "-m", "pytest", "tests/integration/", "-m", "in_cluster_only", "-v"]
                restartPolicy: Never
            backoffLimit: 1
          EOF
          
          # Wait for job completion
          kubectl wait --for=condition=complete job/integration-tests-${{ github.run_id }} \
            -n ${{ env.K8S_NAMESPACE }} --timeout=600s
          
          # Get logs
          kubectl logs job/integration-tests-${{ github.run_id }} -n ${{ env.K8S_NAMESPACE }}

  security-tests:
    name: Security Tests
    runs-on: ubuntu-latest
    needs: setup-cluster
    if: inputs.test_suite == 'security' || inputs.test_suite == 'all' || inputs.test_suite == ''
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r tests/requirements-test.txt
      
      - name: Setup port-forwards
        run: |
          kubectl port-forward -n ${{ env.K8S_NAMESPACE }} svc/api 8080:80 &
          sleep 5
      
      - name: Run security tests
        run: |
          python tests/run_tests.py security --verbose
        env:
          API_URL: http://localhost:8080

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: setup-cluster
    if: inputs.test_suite == 'performance' || (inputs.test_suite == 'all' && inputs.include_slow == true)
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          role-session-name: GitHub-Actions-Test-Perf-${{ github.run_id }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Run performance tests
        run: |
          # Performance tests run as Jobs to be closer to actual workload
          kubectl create job perf-test-${{ github.run_id }} \
            --from=cronjob/test-runner \
            --namespace=${{ env.K8S_NAMESPACE }} \
            -- python tests/run_tests.py performance --include-slow

  cleanup:
    name: Cleanup Test Environment
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests-external, integration-tests-internal, security-tests, performance-tests]
    if: always()
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          role-session-name: GitHub-Actions-Test-Cleanup-${{ github.run_id }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
      
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name crucible-cluster
      
      - name: Delete test namespace
        run: |
          kubectl delete namespace ${{ env.K8S_NAMESPACE }} --wait=false || true
      
      - name: Clean up old test namespaces
        run: |
          # Delete test namespaces older than 24 hours
          kubectl get namespaces -l test-type=automated -o json | \
            jq -r '.items[] | select(.metadata.creationTimestamp | fromdateiso8601 < (now - 86400)) | .metadata.name' | \
            xargs -I {} kubectl delete namespace {} --wait=false || true