name: Deploy to S3

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    # Required for OIDC
    permissions:
      id-token: write
      contents: read
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Configure AWS credentials via OIDC
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ vars.AWS_ROLE_ARN }}
        aws-region: us-west-2
    
    - name: Deploy to S3
      run: |
        chmod +x scripts/deployment/deploy-to-s3.sh
        ./scripts/deployment/deploy-to-s3.sh
    
    - name: Deploy to EC2 via SSH
      env:
        DEPLOY_KEY: ${{ secrets.EC2_DEPLOY_KEY }}
      run: |
        # Get EC2 public IP
        EC2_IP=$(aws ec2 describe-instances \
          --filters "Name=tag:Project,Values=crucible" "Name=instance-state-name,Values=running" \
          --query "Reservations[*].Instances[*].PublicIpAddress" \
          --output text | head -n1)
        
        if [ -z "$EC2_IP" ]; then
          echo "❌ No EC2 instance found with Project=crucible tag"
          exit 1
        fi
        
        echo "📡 Deploying to EC2 instance at $EC2_IP"
        
        # Setup SSH key
        mkdir -p ~/.ssh
        echo "$DEPLOY_KEY" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        
        # Get deployment details from SSM
        BUCKET_NAME=$(aws ssm get-parameter --name "/crucible/deployment-bucket" --query 'Parameter.Value' --output text)
        VERSION=$(aws ssm get-parameter --name "/crucible/current-version" --query 'Parameter.Value' --output text)
        
        # Deploy via SSH with inline commands
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key ubuntu@$EC2_IP << EOF
          set -e
          
          echo "🚀 Deploying Crucible Platform version: $VERSION"
          
          # Download from S3
          aws s3 cp s3://$BUCKET_NAME/crucible-platform-$VERSION.tar.gz /tmp/
          
          # Extract to deployment directory
          mkdir -p /home/ubuntu/crucible
          tar -xzf /tmp/crucible-platform-$VERSION.tar.gz -C /home/ubuntu/crucible
          
          # Setup Python environment
          cd /home/ubuntu/crucible
          if [ ! -d "venv" ]; then
            python3.11 -m venv venv
          fi
          
          # Install dependencies
          ./venv/bin/pip install --upgrade pip
          ./venv/bin/pip install -r requirements.txt
          ./venv/bin/pip install -e .
          
          # Update systemd service if provided
          if [ -f "infrastructure/systemd/crucible-platform.service" ]; then
            sudo cp infrastructure/systemd/crucible-platform.service /etc/systemd/system/
            sudo systemctl daemon-reload
          fi
          
          # Start or restart service
          if systemctl is-active --quiet crucible-platform; then
            echo "♻️  Restarting crucible-platform service..."
            sudo systemctl restart crucible-platform
          else
            echo "▶️  Starting crucible-platform service..."
            sudo systemctl enable crucible-platform
            sudo systemctl start crucible-platform
          fi
          
          # Cleanup
          rm -f /tmp/crucible-platform-$VERSION.tar.gz
          
          # Show status
          echo ""
          echo "✅ Deployment complete!"
          echo ""
          echo "Service status:"
          sudo systemctl status crucible-platform --no-pager | head -n 10
          
          echo ""
          echo "Recent logs:"
          sudo journalctl -u crucible-platform -n 20 --no-pager
        EOF
        
        # Cleanup SSH key
        rm -f ~/.ssh/deploy_key