name: Deploy to S3

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    # Required for OIDC
    permissions:
      id-token: write
      contents: read
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Configure AWS credentials via OIDC
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ vars.AWS_ROLE_ARN }}
        aws-region: us-west-2
    
    - name: Deploy to S3
      run: |
        chmod +x scripts/deployment/deploy-to-s3.sh
        ./scripts/deployment/deploy-to-s3.sh
    
    - name: Deploy to EC2 via SSM
      run: |
        # Find EC2 instances
        INSTANCE_IDS=$(aws ec2 describe-instances \
          --filters "Name=tag:Project,Values=crucible" "Name=instance-state-name,Values=running" \
          --query "Reservations[*].Instances[*].InstanceId" \
          --output text)
        
        if [ -z "$INSTANCE_IDS" ]; then
          echo "‚ùå No EC2 instances found with Project=crucible tag"
          exit 1
        fi
        
        echo "üì° Deploying to instances: $INSTANCE_IDS"
        
        # Get deployment info
        BUCKET_NAME=$(aws ssm get-parameter --name "/crucible/deployment-bucket" --query 'Parameter.Value' --output text)
        VERSION=$(aws ssm get-parameter --name "/crucible/current-version" --query 'Parameter.Value' --output text)
        
        echo "üì¶ Deploying version $VERSION from bucket $BUCKET_NAME"
        
        # Run idempotent deployment commands
        DEPLOY_CMD=$(aws ssm send-command \
          --instance-ids $INSTANCE_IDS \
          --document-name "AWS-RunShellScript" \
          --comment "Deploy Crucible Platform $VERSION" \
          --parameters "commands=[
            \"echo 'üöÄ Deploying version: $VERSION'\",
            \"aws s3 cp s3://${BUCKET_NAME}/crucible-platform-${VERSION}.tar.gz /tmp/\",
            \"mkdir -p /home/ubuntu/crucible\",
            \"tar -xzf /tmp/crucible-platform-${VERSION}.tar.gz -C /home/ubuntu/crucible\",
            \"cd /home/ubuntu/crucible\",
            \"mkdir -p /home/ubuntu/crucible/frontier_storage\",
            \"chown -R ubuntu:ubuntu /home/ubuntu/crucible\",
            \"python3.11 -m venv venv || true\",
            \"./venv/bin/pip install -r requirements.txt\",
            \"./venv/bin/pip install -e .\",
            \"if [ -f infrastructure/systemd/crucible-platform.service ]; then sudo cp infrastructure/systemd/crucible-platform.service /etc/systemd/system/ && sudo systemctl daemon-reload; fi\",
            \"sudo systemctl restart crucible-platform || sudo systemctl start crucible-platform\",
            \"rm -f /tmp/crucible-platform-${VERSION}.tar.gz\",
            \"echo '‚úÖ Deployment complete!'\"
          ]" \
          --query "Command.CommandId" \
          --output text)
        
        echo "üìù Command ID: $DEPLOY_CMD"
        echo "‚úÖ Deployment command sent successfully"