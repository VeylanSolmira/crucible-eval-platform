version: '3.8'

services:
  crucible-platform:
    build:
      context: .
      dockerfile: Dockerfile
    image: ${PROJECT_NAME:-crucible-platform}:local
    container_name: ${CONTAINER_NAME:-crucible-platform}
    ports:
      - "8080:8080"
    volumes:
      # Mount Docker socket for sibling containers
      # Set DOCKER_SOCKET_PATH in .env file for your platform:
      # macOS: /Users/$USER/.docker/run/docker.sock
      # Linux: /var/run/docker.sock
      - ${DOCKER_SOCKET_PATH:-/var/run/docker.sock}:/var/run/docker.sock
      # Mount storage directory for persistence
      - ./storage:/app/storage
    environment:
      - PYTHONUNBUFFERED=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - LOG_LEVEL=INFO
      - BIND_HOST=0.0.0.0           # Bind to all interfaces in container
      - SERVICE_HOST=crucible       # Use service name for inter-container comms
      - PLATFORM_HOST=crucible      # API gateway host
      - HOST_PWD=${PWD}             # Pass host working directory for volume mapping
    restart: unless-stopped
    # Security options
    security_opt:
      - no-new-privileges:true
    read_only: false  # Need write for temp files, but could be true with tmpfs
    # tmpfs:
    #   - /tmp:size=100M
    
    # Previous approach for non-root Docker access (kept for reference):
    # Override user to match host's docker group (usually 999 or 998)
    # You may need to adjust this based on your system
    # Run: getent group docker | cut -d: -f3
    # to find your docker group ID
    # group_add:
    #   - "999"  # docker group - adjust if needed
    #   # If the above doesn't work, try uncommenting one of these:
    #   # - "998"  # Common on some systems
    #   # - "0"    # root group (less secure but may work)
    
    # Currently running as root for Docker socket access (see Dockerfile)

  # Future: Redis for Celery (Day 3)
  # redis:
  #   image: redis:7-alpine
  #   container_name: crucible-redis
  #   volumes:
  #     - redis-data:/data
  #   restart: unless-stopped

  # Future: PostgreSQL for persistence
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: crucible-db
  #   environment:
  #     POSTGRES_DB: crucible
  #     POSTGRES_USER: crucible
  #     POSTGRES_PASSWORD: changeme
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #   restart: unless-stopped

volumes:
  # redis-data:
  # postgres-data:
  storage:
    driver: local