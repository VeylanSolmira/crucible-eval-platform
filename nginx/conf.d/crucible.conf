server {
    listen 80;
    server_name _; # Accept any hostname
    
    # Let's Encrypt challenge directory (for production)
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }
    
    # Health check endpoint (no rate limiting)
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Redirect to HTTPS
    location / {
        return 301 https://$host$request_uri; # Use $host instead of $server_name
    }
}

server {
    listen 443 ssl;
    server_name _; # Accept any hostname
    
    # SSL configuration (will be added by entrypoint script if certificates exist)
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    
    # SSL security settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    
    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # Hide Nginx version
    server_tokens off;
    
    # Apply general rate limiting
    limit_req zone=general burst=20 nodelay;
    
    # Proxy settings
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    
    # Backend API (Python services)
    location /api/ {
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass http://api-service:8080;
        
        # API-specific headers
        proxy_set_header Accept-Encoding gzip;
    }
    
    # WebSocket endpoint for real-time updates
    location /api/events/stream {
        proxy_pass http://api-service:8080;
        
        # WebSocket headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Disable buffering for SSE
        proxy_buffering off;
        proxy_cache off;
        
        # Longer timeout for persistent connections
        proxy_read_timeout 3600s;
    }
    
    # OpenAPI spec
    location /openapi.json {
        proxy_pass http://api-service:8080;
    }
    
    # Health check endpoint (no rate limiting)
    location /health {
        access_log off;
        proxy_pass http://api-service:8080/api/status;
    }
    
    # Flower Dashboard (Celery monitoring)
    location /flower/ {
        proxy_pass http://flower:5555/;
        proxy_set_header Host $host;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Basic auth handled by Flower itself
        proxy_set_header Authorization $http_authorization;
        proxy_pass_header Authorization;
        
        # Rewrite Location headers for redirects
        proxy_redirect http://flower:5555/ /flower/;
    }
    
    # Flower static files (CSS, JS, etc)
    location /static/ {
        proxy_pass http://flower:5555/static/;
        proxy_set_header Host $host;
        
        # Cache static assets
        expires 1h;
        add_header Cache-Control "public";
    }
    
    # Frontend (Next.js app)
    location / {
        proxy_pass http://crucible-frontend:3000;
        
        # Support for Next.js hot reload in development
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # Static file caching for frontend assets only
    location ~* ^(?!/static/).*\.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://crucible-frontend:3000;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Deny access to hidden files
    location ~ /\. {
        deny all;
        return 404;
    }
}

# HTTP-only configuration for local development
server {
    listen 8000;
    server_name localhost;
    
    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Apply general rate limiting
    limit_req zone=general burst=20 nodelay;
    
    # Proxy settings
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Backend API
    location /api/ {
        limit_req zone=api burst=10 nodelay;
        proxy_pass http://api-service:8080;
    }
    
    # WebSocket endpoint
    location /api/events/stream {
        proxy_pass http://api-service:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_buffering off;
        proxy_cache off;
        proxy_read_timeout 3600s;
    }
    
    # OpenAPI spec
    location /openapi.json {
        proxy_pass http://api-service:8080;
    }
    
    # Health check
    location /health {
        access_log off;
        proxy_pass http://api-service:8080/api/status;
    }
    
    # Flower Dashboard (Celery monitoring)
    location /flower/ {
        proxy_pass http://flower:5555/;
        proxy_set_header Host $host;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Basic auth handled by Flower itself
        proxy_set_header Authorization $http_authorization;
        proxy_pass_header Authorization;
        
        # Rewrite Location headers for redirects
        proxy_redirect http://flower:5555/ /flower/;
    }
    
    # Flower static files (CSS, JS, etc)
    location /static/ {
        proxy_pass http://flower:5555/static/;
        proxy_set_header Host $host;
        
        # Cache static assets
        expires 1h;
        add_header Cache-Control "public";
    }
    
    # Frontend
    location / {
        proxy_pass http://crucible-frontend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}