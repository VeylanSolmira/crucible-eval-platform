openapi: 3.1.0
info:
  title: Crucible Storage Service
  description: RESTful API for accessing evaluation data across multiple storage backends
    (database, file, S3, Redis)
  version: 1.0.0
paths:
  /health:
    get:
      summary: Health
      description: Health check endpoint
      operationId: health_health_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /storage-info:
    get:
      summary: Get Storage Info
      description: Get information about storage configuration
      operationId: get_storage_info_storage_info_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageInfoResponse'
  /evaluations:
    post:
      summary: Create Evaluation
      description: Create a new evaluation record
      operationId: create_evaluation_evaluations_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluationCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      summary: List Evaluations
      description: List evaluations with pagination and filtering
      operationId: list_evaluations_evaluations_get
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 1000
          minimum: 1
          description: Maximum number of results
          default: 100
          title: Limit
        description: Maximum number of results
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          description: Number of results to skip
          default: 0
          title: Offset
        description: Number of results to skip
      - name: status
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by status
          title: Status
        description: Filter by status
      - name: language
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by language
          title: Language
        description: Filter by language
      - name: since
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by creation time (ISO format)
          title: Since
        description: Filter by creation time (ISO format)
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationListResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /evaluations/{eval_id}:
    get:
      summary: Get Evaluation
      description: 'Get evaluation by ID


        The storage service automatically retrieves from:

        1. Cache (if enabled and available)

        2. Primary backend (database/file/memory)

        3. Fallback backend (if primary fails)


        Large outputs (>100KB) are automatically fetched from S3/filesystem.'
      operationId: get_evaluation_evaluations__eval_id__get
      parameters:
      - name: eval_id
        in: path
        required: true
        schema:
          type: string
          title: Eval Id
      - name: include_storage_info
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Include Storage Info
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      summary: Update Evaluation
      description: Update an existing evaluation
      operationId: update_evaluation_evaluations__eval_id__put
      parameters:
      - name: eval_id
        in: path
        required: true
        schema:
          type: string
          title: Eval Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluationUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      summary: Delete Evaluation
      description: Delete an evaluation (soft delete)
      operationId: delete_evaluation_evaluations__eval_id__delete
      parameters:
      - name: eval_id
        in: path
        required: true
        schema:
          type: string
          title: Eval Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /evaluations/{eval_id}/running:
    get:
      summary: Get Running Info
      description: Get running container info from Redis for active evaluations
      operationId: get_running_info_evaluations__eval_id__running_get
      parameters:
      - name: eval_id
        in: path
        required: true
        schema:
          type: string
          title: Eval Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /evaluations/{eval_id}/celery-update:
    post:
      summary: Update Celery Task Status
      description: 'Update evaluation status from Celery task.


        This endpoint is called by Celery tasks to update evaluation status

        with Celery-specific information like task ID, retry count, etc.'
      operationId: update_celery_task_status_evaluations__eval_id__celery_update_post
      parameters:
      - name: eval_id
        in: path
        required: true
        schema:
          type: string
          title: Eval Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              title: Body
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /evaluations/running:
    get:
      summary: List Running Evaluations
      description: List all currently running evaluations
      operationId: list_running_evaluations_evaluations_running_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /evaluations/{eval_id}/events:
    post:
      summary: Add Event
      description: Add an event to evaluation history
      operationId: add_event_evaluations__eval_id__events_post
      parameters:
      - name: eval_id
        in: path
        required: true
        schema:
          type: string
          title: Eval Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      summary: Get Events
      description: Get evaluation event history
      operationId: get_events_evaluations__eval_id__events_get
      parameters:
      - name: eval_id
        in: path
        required: true
        schema:
          type: string
          title: Eval Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventResponse'
                title: Response Get Events Evaluations  Eval Id  Events Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /statistics:
    get:
      summary: Get Statistics
      description: Get aggregated statistics
      operationId: get_statistics_statistics_get
      parameters:
      - name: since
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Calculate stats since this time (ISO format)
          title: Since
        description: Calculate stats since this time (ISO format)
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /evaluations/bulk:
    post:
      summary: Bulk Create Evaluations
      description: Create multiple evaluations in one request
      operationId: bulk_create_evaluations_evaluations_bulk_post
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/EvaluationCreate'
              type: array
              title: Evaluations
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /storage/overview:
    get:
      summary: Get Storage Overview
      description: Get overview of all storage backends with metrics
      operationId: get_storage_overview_storage_overview_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /storage/{backend}/details:
    get:
      summary: Get Storage Backend Details
      description: Get detailed information about a specific storage backend
      operationId: get_storage_backend_details_storage__backend__details_get
      parameters:
      - name: backend
        in: path
        required: true
        schema:
          type: string
          title: Backend
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /evaluations/{eval_id}/complete:
    get:
      summary: Get Evaluation Complete
      description: Get complete evaluation data including all artifacts and events
      operationId: get_evaluation_complete_evaluations__eval_id__complete_get
      parameters:
      - name: eval_id
        in: path
        required: true
        schema:
          type: string
          title: Eval Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /evaluations/{eval_id}/logs:
    post:
      summary: Append Evaluation Logs
      description: Append logs to an evaluation
      operationId: append_evaluation_logs_evaluations__eval_id__logs_post
      parameters:
      - name: eval_id
        in: path
        required: true
        schema:
          type: string
          title: Eval Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              title: Request
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      summary: Get Evaluation Logs
      description: Get logs for an evaluation with Redis cache check
      operationId: get_evaluation_logs_evaluations__eval_id__logs_get
      parameters:
      - name: eval_id
        in: path
        required: true
        schema:
          type: string
          title: Eval Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    EvaluationCreate:
      properties:
        id:
          type: string
          title: Id
          description: Evaluation ID
        code:
          type: string
          title: Code
          description: Code to be evaluated
        language:
          type: string
          title: Language
          description: Programming language
          default: python
        status:
          type: string
          title: Status
          description: Initial status
          default: queued
        metadata:
          type: object
          title: Metadata
          description: Additional metadata
      type: object
      required:
      - id
      - code
      title: EvaluationCreate
    EvaluationListResponse:
      properties:
        evaluations:
          items:
            $ref: '#/components/schemas/EvaluationResponse'
          type: array
          title: Evaluations
        total:
          type: integer
          title: Total
        limit:
          type: integer
          title: Limit
        offset:
          type: integer
          title: Offset
        has_more:
          type: boolean
          title: Has More
      type: object
      required:
      - evaluations
      - total
      - limit
      - offset
      - has_more
      title: EvaluationListResponse
    EvaluationResponse:
      properties:
        id:
          type: string
          title: Id
        code:
          anyOf:
          - type: string
          - type: 'null'
          title: Code
        language:
          anyOf:
          - type: string
          - type: 'null'
          title: Language
        status:
          type: string
          title: Status
        created_at:
          anyOf:
          - type: string
          - type: 'null'
          title: Created At
        started_at:
          anyOf:
          - type: string
          - type: 'null'
          title: Started At
        completed_at:
          anyOf:
          - type: string
          - type: 'null'
          title: Completed At
        output:
          anyOf:
          - type: string
          - type: 'null'
          title: Output
        error:
          anyOf:
          - type: string
          - type: 'null'
          title: Error
        output_truncated:
          type: boolean
          title: Output Truncated
          default: false
        error_truncated:
          type: boolean
          title: Error Truncated
          default: false
        runtime_ms:
          anyOf:
          - type: integer
          - type: 'null'
          title: Runtime Ms
        metadata:
          type: object
          title: Metadata
      type: object
      required:
      - id
      - status
      title: EvaluationResponse
    EvaluationUpdate:
      properties:
        status:
          anyOf:
          - type: string
          - type: 'null'
          title: Status
          description: New status
        output:
          anyOf:
          - type: string
          - type: 'null'
          title: Output
          description: Execution output
        error:
          anyOf:
          - type: string
          - type: 'null'
          title: Error
          description: Error message if failed
        metadata:
          anyOf:
          - type: object
          - type: 'null'
          title: Metadata
          description: Additional metadata to merge
        celery_task_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Celery Task Id
          description: Celery task ID if using Celery
        retries:
          anyOf:
          - type: integer
          - type: 'null'
          title: Retries
          description: Number of retry attempts
        final_failure:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Final Failure
          description: Whether task failed after all retries
        executor_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Executor Id
          description: ID of executor running this evaluation
        container_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Container Id
          description: Docker container ID
      type: object
      title: EvaluationUpdate
    EventCreate:
      properties:
        type:
          type: string
          title: Type
          description: Event type
        message:
          type: string
          title: Message
          description: Event message
        metadata:
          type: object
          title: Metadata
          description: Event metadata
      type: object
      required:
      - type
      - message
      title: EventCreate
    EventResponse:
      properties:
        type:
          type: string
          title: Type
        timestamp:
          type: string
          title: Timestamp
        message:
          type: string
          title: Message
        metadata:
          type: object
          title: Metadata
      type: object
      required:
      - type
      - timestamp
      - message
      title: EventResponse
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    StatisticsResponse:
      properties:
        total_evaluations:
          type: integer
          title: Total Evaluations
        by_status:
          additionalProperties:
            type: integer
          type: object
          title: By Status
        by_language:
          additionalProperties:
            type: integer
          type: object
          title: By Language
        average_runtime_ms:
          anyOf:
          - type: number
          - type: 'null'
          title: Average Runtime Ms
        success_rate:
          type: number
          title: Success Rate
        last_24h_count:
          type: integer
          title: Last 24H Count
        peak_hour:
          anyOf:
          - type: string
          - type: 'null'
          title: Peak Hour
        storage_info:
          type: object
          title: Storage Info
      type: object
      required:
      - total_evaluations
      - by_status
      - by_language
      - success_rate
      - last_24h_count
      title: StatisticsResponse
    StorageInfoResponse:
      properties:
        primary_backend:
          type: string
          title: Primary Backend
        fallback_backend:
          anyOf:
          - type: string
          - type: 'null'
          title: Fallback Backend
        cache_enabled:
          type: boolean
          title: Cache Enabled
        large_output_storage:
          type: string
          title: Large Output Storage
          description: Where outputs >100KB are stored
        storage_thresholds:
          additionalProperties:
            type: integer
          type: object
          title: Storage Thresholds
        backends_available:
          items:
            type: string
          type: array
          title: Backends Available
      type: object
      required:
      - primary_backend
      - cache_enabled
      - large_output_storage
      - storage_thresholds
      - backends_available
      title: StorageInfoResponse
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
