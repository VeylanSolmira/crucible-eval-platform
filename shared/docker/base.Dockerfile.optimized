# Multi-stage build for optimized base image
FROM python:3.11-slim AS python-base

# Install build dependencies in a separate stage
FROM python-base AS builder

# Install build tools that might be needed for some packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment for better isolation
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install common Python dependencies
COPY shared/docker/requirements-base.txt /tmp/
RUN pip install --no-cache-dir -r /tmp/requirements-base.txt

# Final stage - smaller runtime image
FROM python-base AS runtime

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv

# Set up environment
ENV PATH="/opt/venv/bin:$PATH"
ENV PYTHONUNBUFFERED=1
ENV LOG_LEVEL=INFO
ENV PYTHONDONTWRITEBYTECODE=1

# Create non-root user for security
RUN groupadd -r appuser && useradd -r -g appuser appuser \
    && mkdir -p /app \
    && chown -R appuser:appuser /app

# Add health check script as a proper file
COPY shared/docker/healthcheck.py /healthcheck.py
RUN chmod +x /healthcheck.py

# Set working directory
WORKDIR /app

# Default health check (services can override)
HEALTHCHECK --interval=30s --timeout=3s --start-period=40s --retries=3 \
    CMD python /healthcheck.py || exit 1

# Switch to non-root user (services can override if needed)
USER appuser

# Labels for better container management
LABEL maintainer="Crucible Platform Team"
LABEL description="Base image for Crucible Python services"
LABEL version="1.0.0"